{"version":3,"sources":["goods.js","App.tsx","index.tsx"],"names":["App","state","selectedGoods","addGood","good","setState","prevState","removeGood","filter","prevGood","clearBucket","this","length","slice","join","className","getTitle","type","onClick","goodsFromServer","map","classNames","includes","Component","ReactDOM","render","document","getElementById"],"mappings":"6OAAe,G,MAAA,CACb,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,OCAWA,EAAb,4MACEC,MAAQ,CACNC,cAAe,CAAC,QAFpB,EAiBEC,QAAU,SAACC,GACT,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BJ,cAAc,GAAD,mBAAMI,EAAUJ,eAAhB,CAA+BE,SAnBlD,EAuBEG,WAAa,SAACH,GACZ,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BJ,cAAeI,EAAUJ,cACtBM,QAAO,SAAAC,GAAQ,OAAIA,IAAaL,UA1BzC,EA8BEM,YAAc,WACZ,EAAKL,SAAS,CAAEH,cAAe,MA/BnC,8CAKE,WACE,OAAKS,KAAKV,MAAMC,cAAcU,OAIU,IAApCD,KAAKV,MAAMC,cAAcU,OACrB,GAAN,OAAUD,KAAKV,MAAMC,cAArB,gBAGI,GAAN,OAAUS,KAAKV,MAAMC,cAAcW,MAAM,GAAI,GAAGC,KAAK,MAArD,gBAAkEH,KAAKV,MAAMC,cAAcW,OAAO,GAAlG,iBAPS,sBAPb,oBAkCE,WAAU,IAAD,OACCX,EAAkBS,KAAKV,MAAvBC,cAER,OACE,sBAAMa,UAAU,MAAhB,SACE,sBAAKA,UAAU,iBAAf,UACE,yBAAQA,UAAU,cAAlB,UACE,oBAAIA,UAAU,aAAd,SACGJ,KAAKK,aAEkB,IAAzBd,EAAcU,QACb,wBACEK,KAAK,SACLF,UAAU,aACVG,QAASP,KAAKD,YAHhB,sBAUJ,oBAAIK,UAAU,YAAd,SACGI,EAAgBC,KAAI,SAAAhB,GAAI,OACvB,qBAEEW,UAAWM,IACT,YACA,CACE,oBAAqBnB,EAAcoB,SAASlB,KALlD,UASE,4BAAIA,IAEFF,EAAcoB,SAASlB,GAarB,wBACEW,UAAU,cACVE,KAAK,SACLC,QAAS,WACP,EAAKX,WAAWH,IAJpB,oBAXA,wBACEW,UAAU,cACVE,KAAK,SACLC,QAAS,WACP,EAAKf,QAAQC,IAJjB,sBAZCA,iBA1DrB,GAAyBmB,aCPzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9a7bdb08.chunk.js","sourcesContent":["export default [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import classNames from 'classnames';\nimport { Component } from 'react';\nimport './App.scss';\n\nimport goodsFromServer from './goods';\n\ntype State = {\n  selectedGoods: string[];\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  getTitle() {\n    if (!this.state.selectedGoods.length) {\n      return 'No goods selected';\n    }\n\n    if (this.state.selectedGoods.length === 1) {\n      return `${this.state.selectedGoods} is selected`;\n    }\n\n    return `${this.state.selectedGoods.slice(0, -1).join(', ')} and ${this.state.selectedGoods.slice(-1)} are selected`;\n  }\n\n  addGood = (good: string) => {\n    this.setState((prevState) => ({\n      selectedGoods: [...prevState.selectedGoods, good],\n    }));\n  };\n\n  removeGood = (good: string) => {\n    this.setState((prevState) => ({\n      selectedGoods: prevState.selectedGoods\n        .filter(prevGood => prevGood !== good),\n    }));\n  };\n\n  clearBucket = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <main className=\"App\">\n        <div className=\"App__container\">\n          <header className=\"App__header\">\n            <h1 className=\"App__title\">\n              {this.getTitle()}\n            </h1>\n            {selectedGoods.length !== 0 && (\n              <button\n                type=\"button\"\n                className=\"App__clear\"\n                onClick={this.clearBucket}\n              >\n                Clear\n              </button>\n            )}\n          </header>\n\n          <ul className=\"App__list\">\n            {goodsFromServer.map(good => (\n              <li\n                key={good}\n                className={classNames(\n                  'App__item',\n                  {\n                    'App__item--active': selectedGoods.includes(good),\n                  },\n                )}\n              >\n                <p>{good}</p>\n\n                {!selectedGoods.includes(good)\n                  ? (\n                    <button\n                      className=\"App__select\"\n                      type=\"button\"\n                      onClick={() => {\n                        this.addGood(good);\n                      }}\n                    >\n                      Select\n                    </button>\n                  )\n                  : (\n                    <button\n                      className=\"App__remove\"\n                      type=\"button\"\n                      onClick={() => {\n                        this.removeGood(good);\n                      }}\n                    >\n                      Remove\n                    </button>\n                  )}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}